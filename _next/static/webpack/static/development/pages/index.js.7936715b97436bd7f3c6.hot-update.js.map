{"version":3,"file":"static/webpack/static/development/pages/index.js.7936715b97436bd7f3c6.hot-update.js","sources":["webpack:///./src/components/page/index/index.tsx"],"sourcesContent":["import { isString } from 'util'\n\nimport styles from '@styles/sass/page/home.module.scss'\n\nimport { skillInfo } from '@store/mock'\nimport { jobsInfo } from '@store/mock'\n\nimport { SvgIcon, ISvgIconProps } from '@components/common'\n\nimport { ReactComponent as SvgUserSecret } from '@fonts/svg/home/user-secret.svg'\nimport { ReactComponent as SvgCode } from '@fonts/svg/home/code.svg'\n\nimport { ReactComponent as SvgQuoteLeft } from '@fonts/svg/home/quote-left.svg'\nimport { ReactComponent as SvgUser } from '@fonts/svg/menu/user.svg'\nimport { ReactComponent as SvgBank } from '@fonts/svg/home/bank.svg'\nimport { ReactComponent as SvgGithub } from '@fonts/svg/home/github.svg'\nimport { ReactComponent as SvgGraduationCap } from '@fonts/svg/home/graduation-cap.svg'\nimport { ReactComponent as SvgLinks } from '@fonts/svg/home/links.svg'\nimport { ReactComponent as SvgMarker } from '@fonts/svg/home/marker.svg'\n\nimport { ReactComponent as SvgBook } from '@fonts/svg/home/book.svg'\nimport { ReactComponent as SvgFileCode } from '@fonts/svg/home/file-code-o.svg'\nimport { ReactComponent as SvgMacDesktop } from '@fonts/svg/home/mac-desktop.svg'\nimport { ReactComponent as SvgUserPlus } from '@fonts/svg/home/user-plus.svg'\nimport { ReactComponent as SvgMusic } from '@fonts/svg/home/music.svg'\nimport { ReactComponent as SvgMotion } from '@fonts/svg/home/motion.svg'\n\nimport { ReactComponent as SvgCalendar } from '@fonts/svg/home/calendar.svg'\nimport { ReactComponent as SvgTrophy } from '@fonts/svg/home/trophy.svg'\nimport { ReactComponent as SvgJobs } from '@fonts/svg/home/jobs.svg'\nimport { ReactComponent as SvgBuilding } from '@fonts/svg/home/building.svg'\nimport { ReactComponent as SvgJobTitle } from '@fonts/svg/home/job-title.svg'\n\nconst age = new Date().getFullYear() - 1994\nconst { work_list } = styles\n\nconst baseInfo: {\n  icon: ISvgIconProps\n  title:\n    | string\n    | {\n        text?: string\n        className?: string\n      }\n  links?: string\n}[] = [\n  {\n    icon: {\n      component: SvgUser,\n    },\n    title: `男/${age}岁/(1994.09)`,\n  },\n  {\n    icon: {\n      component: SvgGraduationCap,\n      className: 'font-size-md',\n    },\n    title: '软件技术/大专',\n  },\n  {\n    icon: {\n      component: SvgBank,\n    },\n    links: 'http://www.szpt.edu.cn/',\n    title: '深圳职业技术学院',\n  },\n  {\n    icon: {\n      component: SvgMarker,\n    },\n    title: '深圳市南山区西丽镇',\n  },\n  {\n    icon: {\n      component: SvgGithub,\n    },\n    links: '//github.com/liuguanhua/',\n    title: {\n      text: 'liuguanhua.github.io',\n      className: 'm-l-md',\n    },\n  },\n  {\n    icon: {\n      component: SvgLinks,\n    },\n    links: 'http://lghayy.zcool.com.cn/',\n    title: 'lghayy.zcool.com.cn',\n  },\n]\n\nconst empiricInfo = [\n  {\n    text: `具有PC端、移动端、h5、前后端分离及微信公众号、小程序的开发经验，开源社交分享组件、后台管理设计方案至GitHub。熟练使 用HTML(5)、CSS(3)、JavaScript构建高性能的Web应用程序。`,\n  },\n  {\n    text: `熟悉JavaScript、ES6、预编译TypeScript、jQuery类库，原生BOM、DOM对象。熟练运用Ajax、Json进行数据交互，常用Axios。`,\n  },\n  {\n    text: `熟练Flex布局，预处理器Sass，熟悉AntDesign、ElementUI、BootStrap等常用前端UI框架。了解Less、Styled-Components。`,\n  },\n  {\n    text: `熟悉React、Vue框架进行模块化开发单页应用，状态管理库Redux、Vuex、Dva，SSR开发Next、NuxtJs，采用过RequireJs构建过 个人项目。了解Serverless、Angular、SeaJs、React-Native。`,\n  },\n  {\n    text: `开发过健身类微信小程序(WePY)，公众号端直播平台，能快速进行跨多尺寸、多平台设备开发，会用PhotoShop界面设计工具进行页面设计和原型切图。了解IlluStrator、CorelDraw。`,\n  },\n  {\n    text: `能使用NodeJs、Gulp、WebPack搭建开发环境，并使用过Express和MockJs开发过数据接口，Postman工具进行接口测试。`,\n  },\n  {\n    text: `了解Http协议，熟悉使用Git版本控制，Charles抓包，掌握Linux Shell基本命令。了解Svn、Jenkins、Docker、MySQL。`,\n  },\n  {\n    text: `拥有良好的代码编程习惯，较强的学习能力和解决问题的能力，能保证项目在周期内完成的同时也兼顾了质量。`,\n  },\n]\n\nconst hobbyInfo: {\n  icon: ISvgIconProps\n  text: string\n}[] = [\n  {\n    icon: {\n      component: SvgBook,\n    },\n    text: '阅读',\n  },\n  {\n    icon: {\n      component: SvgFileCode,\n    },\n    text: '代码',\n  },\n  {\n    icon: {\n      component: SvgMacDesktop,\n    },\n    text: '网络',\n  },\n  {\n    icon: {\n      component: SvgUserPlus,\n    },\n    text: '交友',\n  },\n  {\n    icon: {\n      component: SvgMusic,\n    },\n    text: '音乐',\n  },\n  {\n    icon: {\n      component: SvgMotion,\n    },\n    text: '运动',\n  },\n]\n\nconst BlockTitle: React.FC<{\n  className?: string\n  title?: string\n  icon?: ISvgIconProps\n}> = ({ className, title, icon }) => {\n  return (\n    <h3 className={`color-primary ${className}`}>\n      {icon?.component && <SvgIcon {...icon} />}\n      <span className=\"vam m-l-sm\">{title}</span>\n    </h3>\n  )\n}\n\nexport const AboutMe = () => {\n  return (\n    <>\n      <BlockTitle\n        className=\"r-m-p\"\n        title=\"关于我\"\n        icon={{\n          component: SvgUserSecret,\n        }}\n      />\n      <ul className=\"row-content\">\n        <li className=\"row\">\n          {baseInfo.map(({ links, title, icon }, index) => {\n            const { text, className = '' } = isString(title)\n              ? { text: title }\n              : title\n            const node = (\n              <>\n                <SvgIcon {...icon} />\n                <span className={`vam m-l-sm ${className}`}>{text}</span>\n              </>\n            )\n            return (\n              <div key={index} className=\"col-sm-6 col-lg-4\">\n                {links ? (\n                  <a href={links} target=\"_blank\">\n                    {node}\n                  </a>\n                ) : (\n                  node\n                )}\n              </div>\n            )\n          })}\n        </li>\n        <li>\n          {empiricInfo.map(({ text }, index) => (\n            <p key={index}>\n              <SvgIcon\n                className=\"m-r-md font-size-xs\"\n                component={SvgQuoteLeft}\n              />\n              {text}\n            </p>\n          ))}\n        </li>\n      </ul>\n      <style jsx>{`\n        li {\n          margin-bottom: 2%;\n        }\n        li:first-child > div {\n          margin-top: 2%;\n        }\n        li p {\n          line-height: 2;\n        }\n      `}</style>\n    </>\n  )\n}\n\nconst SkillChildList: React.FC<{\n  data?: DictionaryArray\n  type?: string\n}> = ({ data = [], type }) => {\n  return (\n    <>\n      {data.map((item, key) => {\n        const { url, name } = item\n        const path = `${type}-${item.imgName}`\n        return (\n          <div className=\"col-4 col-sm-3 col-md-4 col-lg-3 col-xl-2\" key={key}>\n            <a href={`${url}/`} target=\"_blank\">\n              <img\n                className=\"bg-color-white bdr-small\"\n                src={`${require(`@images/skill/${path}.png`)}`}\n                alt={name}\n              />\n              <h4 className=\"ellipsis font-weight-normal r-m-p\">{name}</h4>\n            </a>\n          </div>\n        )\n      })}\n      <style jsx>\n        {`\n          div {\n            margin-top: 2%;\n          }\n          a {\n            display: block;\n          }\n          img {\n            width: 70%;\n          }\n        `}\n      </style>\n    </>\n  )\n}\n\nexport const SkillList: React.FC = () => {\n  return (\n    <>\n      <BlockTitle\n        title=\"技术栈&工具\"\n        icon={{\n          component: SvgCode,\n        }}\n      />\n      <ul className=\"row-content\">\n        {skillInfo.map((item, index) => {\n          const { title, data, type } = item\n          return (\n            <li key={index}>\n              <h3 className=\"font-weight-normal r-m-p\">{title}</h3>\n              <div className=\"row tac\">\n                <SkillChildList data={data} type={type} />\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n      <style jsx>{`\n        ul h3 {\n          padding: 0 2%;\n          display: inline-block;\n          background-color: var(--color-primary);\n          color: #fff;\n        }\n        li {\n          padding: 0 10px 10px;\n          border: 1px solid var(--color-default-gray);\n          margin-bottom: 10px;\n          border-radius: 10px;\n        }\n      `}</style>\n    </>\n  )\n}\n\nexport const MyHobbyAndHonor: React.FC = () => {\n  return (\n    <>\n      <BlockTitle\n        title=\"兴趣爱好\"\n        icon={{\n          component: SvgCode,\n        }}\n      />\n      <div className=\"row-content\">\n        <ul className=\"row\">\n          {hobbyInfo.map(({ icon, text }, index) => {\n            return (\n              <li key={index} className=\"col-4 col-sm-2 col-md-4 col-lg-2\">\n                <SvgIcon {...icon} />\n                <span className=\"vam m-l-sm\">{text}</span>\n              </li>\n            )\n          })}\n        </ul>\n      </div>\n      <BlockTitle\n        className=\"r-m-p\"\n        title=\"荣誉证书\"\n        icon={{\n          component: SvgTrophy,\n        }}\n      />\n      <ul className=\"row-content\">\n        <li>\n          <p>\n            <SvgIcon component={SvgCalendar} />\n            <span className=\"font-family-georgia m-l-r-md\">2015-08</span>\n            国家励志奖学金（对学习充满热情,肯钻研问题,不断的自我完善）\n          </p>\n        </li>\n        <li>\n          <p>\n            <SvgIcon component={SvgCalendar} />\n            <span className=\"font-family-georgia m-l-r-md\">2015-07</span>\n            CEAC\".NET程序设计工程师\"证书（通过国家信息化计算机教育认证）\n          </p>\n        </li>\n      </ul>\n      <style jsx>\n        {`\n          div.row-content li {\n            margin-bottom: 2%;\n          }\n        `}\n      </style>\n    </>\n  )\n}\n\nconst createMarkup = (content) => ({ __html: content })\n\nexport const WorkExperience = () => {\n  return (\n    <>\n      <BlockTitle\n        title=\"工作经历\"\n        icon={{\n          component: SvgJobs,\n        }}\n      />\n      <ul className={`p-b-xl row-content ${work_list}`}>\n        {jobsInfo.map((item, index) => {\n          const {\n            links,\n            duties,\n            details,\n            project,\n            enterprise,\n            logoName,\n            time,\n          } = item\n          return (\n            <li key={index}>\n              <div>\n                {logoName && (\n                  <a\n                    href={links}\n                    target=\"_blank\"\n                    className=\"logo inline-block pos-rel\"\n                  >\n                    <img\n                      src={`${require(`@images/logo/${logoName}.jpg`)}`}\n                      alt={logoName}\n                      title={enterprise}\n                    />\n                    <div className=\"tipso pos-abs tac color-white bg-color-primary\">\n                      <div className=\"pos-rel font-family-georgia font-size-md\">\n                        {time}\n                      </div>\n                    </div>\n                  </a>\n                )}\n                <div className=\"content inline-block\">\n                  <h3 className=\"r-m-p\">\n                    <a className=\"color-primary\" href={links} target=\"_blank\">\n                      <SvgIcon component={SvgBuilding} />\n                      <span className=\"vam m-l-xs\">{enterprise}</span>\n                    </a>\n                  </h3>\n                  <h4 className=\"r-m-p m-t-b-md\">\n                    <SvgIcon component={SvgJobTitle} />\n                    <span className=\"vam m-l-sm\">{duties}</span>\n                  </h4>\n                  <time dateTime={time}>\n                    <SvgIcon component={SvgCalendar} />\n                    <span className=\"vam m-l-md font-size-md font-family-georgia\">\n                      {time}\n                    </span>\n                  </time>\n                  <h4 className=\"color-primary r-m-p m-t-b-md\">工作描述：</h4>\n                  <p dangerouslySetInnerHTML={createMarkup(details)} />\n                  <h4 className=\"color-primary r-m-p m-t-b-md\">涉及项目：</h4>\n                  <p dangerouslySetInnerHTML={createMarkup(project)} />\n                </div>\n              </div>\n            </li>\n          )\n        })}\n      </ul>\n    </>\n  )\n}\n"],"mappings":"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":""}